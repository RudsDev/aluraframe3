{"version":3,"sources":["../../app-es6/dao/NegociacaoDao.js"],"names":["Negociacao","NegociacaoDao","connection","_connection","_store","negociacao","Promise","resolve","reject","request","transaction","objectStore","add","onsuccess","event","console","log","onerror","target","error","cursor","openCursor","negociacoes","atual","result","dado","value","push","_data","_quantidade","_valor","continue","name","clear"],"mappings":";;;;;;;;;;;;;;;AAAQA,sB,qBAAAA,U;;;;;;;;;;;;;;;;;;;;;qCACKC,a;AAET,uCAAYC,UAAZ,EAAuB;AAAA;;AAEnB,yBAAKC,WAAL,GAAmBD,UAAnB;AACA,yBAAKE,MAAL,GAAc,aAAd;AAEH;;;;6CAEQC,U,EAAW;AAAA;;AAEhB,+BAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAmB;;AAEnC,gCAAIC,UAAU,MAAKN,WAAL,CACZO,WADY,CACA,CAAC,MAAKN,MAAN,CADA,EACc,WADd,EAEZO,WAFY,CAEA,MAAKP,MAFL,EAGZQ,GAHY,CAGRP,UAHQ,CAAd;;AAKCI,oCAAQI,SAAR,GAAoB,UAACC,KAAD,EAAS;AACzBC,wCAAQC,GAAR,CAAY,kCAAZ;AACAT;AACH,6BAHD;;AAKAE,oCAAQQ,OAAR,GAAkB,UAACH,KAAD,EAAS;AACvBC,wCAAQC,GAAR,CAAY,0BAAZ;AACAD,wCAAQC,GAAR,CAAYF,MAAMI,MAAN,CAAaC,KAAzB;AACH,6BAHD;AAKH,yBAjBM,CAAP;AAkBH;;;iDAEY;AAAA;;AAET,+BAAO,IAAIb,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,gCAAIY,SAAS,OAAKjB,WAAL,CACRO,WADQ,CACI,CAAC,OAAKN,MAAN,CADJ,EACkB,WADlB,EAERO,WAFQ,CAEI,OAAKP,MAFT,EAGRiB,UAHQ,EAAb;;AAKA,gCAAIC,cAAc,EAAlB;;AAEAF,mCAAOP,SAAP,GAAmB,UAACC,KAAD,EAAS;;AAExB,oCAAIS,QAAQT,MAAMI,MAAN,CAAaM,MAAzB;;AAEA,oCAAGD,KAAH,EAAS;AACL,wCAAIE,OAAOF,MAAMG,KAAjB;AACAJ,gDAAYK,IAAZ,CAAiB,IAAI3B,UAAJ,CAAeyB,KAAKG,KAApB,EAA2BH,KAAKI,WAAhC,EAA6CJ,KAAKK,MAAlD,CAAjB;AACAP,0CAAMQ,QAAN;AACH,iCAJD,MAIK;AACDxB,4CAAQe,WAAR;AACH;AACJ,6BAXD;;AAaAF,mCAAOH,OAAP,GAAiB,UAACH,KAAD,EAAS;AACtBC,wCAAQC,GAAR,CAAYF,MAAMI,MAAN,CAAaC,KAAb,CAAmBa,IAA/B;AACAxB,uCAAO,yCAAP;AACH,6BAHD;AAIH,yBA1BM,CAAP;AA2BH;;;iDAGW;AAAA;;AAER,+BAAO,IAAIF,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;;AAEpC,gCAAIC,UAAU,OAAKN,WAAL,CACTO,WADS,CACG,CAAC,OAAKN,MAAN,CADH,EACiB,WADjB,EAETO,WAFS,CAEG,OAAKP,MAFR,EAGT6B,KAHS,EAAd;;AAMAxB,oCAAQI,SAAR,GAAoB,UAACC,KAAD,EAAS;AACzBP,wCAAQ,mCAAR;AACH,6BAFD;;AAIAE,oCAAQQ,OAAR,GAAkB,UAACH,KAAD,EAAS;AACvBC,wCAAQC,GAAR,CAAYF,MAAMI,MAAN,CAAaC,KAAzB;AACAX,uCAAO,yCAAP;AACH,6BAHD;AAIH,yBAhBM,CAAP;AAkBH","file":"NegociacaoDao.js","sourcesContent":["import {Negociacao} from \"../models/Negociacao\";\r\nexport class NegociacaoDao{\r\n\r\n    constructor(connection){\r\n\r\n        this._connection = connection;\r\n        this._store = 'negociacoes';\r\n\r\n    }\r\n\r\n    adiciona(negociacao){\r\n\r\n        return new Promise((resolve, reject)=>{\r\n\r\n           let request = this._connection\r\n            .transaction([this._store],'readwrite')\r\n            .objectStore(this._store)\r\n            .add(negociacao);\r\n\r\n            request.onsuccess = (event)=>{\r\n                console.log('Negociação incluida com sucesso.');\r\n                resolve();\r\n            };\r\n\r\n            request.onerror = (event)=>{\r\n                console.log('Negociação não incluída.');\r\n                console.log(event.target.error);\r\n            };\r\n\r\n        });\r\n    }\r\n\r\n    listaTodas() {\r\n        \r\n        return new Promise((resolve, reject) => {\r\n            \r\n            let cursor = this._connection\r\n                .transaction([this._store],'readwrite')\r\n                .objectStore(this._store)\r\n                .openCursor();\r\n\r\n            let negociacoes = [];\r\n\r\n            cursor.onsuccess = (event)=>{\r\n\r\n                let atual = event.target.result;\r\n\r\n                if(atual){\r\n                    let dado = atual.value;\r\n                    negociacoes.push(new Negociacao(dado._data, dado._quantidade, dado._valor));\r\n                    atual.continue();\r\n                }else{\r\n                    resolve(negociacoes);\r\n                }\r\n            };\r\n\r\n            cursor.onerror = (event)=>{\r\n                console.log(event.target.error.name);\r\n                reject('Não foi possivel listar as negociações.');\r\n            };\r\n        });\r\n    }\r\n\r\n\r\n    apagaTodas(){\r\n\r\n        return new Promise((resolve, reject) => {\r\n            \r\n            let request = this._connection\r\n                .transaction([this._store],'readwrite')\r\n                .objectStore(this._store)\r\n                .clear();\r\n\r\n\r\n            request.onsuccess = (event)=>{\r\n                resolve('Negociações removidas com sucesso');\r\n            };\r\n\r\n            request.onerror = (event)=>{\r\n                console.log(event.target.error);\r\n                reject('Não foi possivel apagar as negociações.');\r\n            };\r\n        });\r\n\r\n    }\r\n\r\n}"]}