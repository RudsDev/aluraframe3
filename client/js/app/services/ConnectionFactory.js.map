{"version":3,"sources":["../../app-es6/services/ConnectionFactory.js"],"names":["stores","version","dbName","connection","close","ConnectionFactory","Error","Promise","resolve","reject","openRequest","window","indexedDB","open","onupgradeneeded","event","_createStore","target","result","onsuccess","bind","onerror","console","log","error","name","conn","forEach","store","objectStoreNames","contains","deleteObjectStore","createObjectStore","autoIncrement"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEMA,kB,GAAS,CAAC,aAAD,C;AACTC,mB,GAAU,C;AACVC,kB,GAAS,Y;AAEXC,sB,GAAa,I;AACbC,iB,GAAQ,I;;yCAECC,iB;AAET,6CAAa;AAAA;;AACT,0BAAM,IAAIC,KAAJ,CAAU,+CAAV,CAAN;AACH;;;;oDAEqB;;AAElB,+BAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAmB;;AAElC,gCAAIC,cAAcC,OAAOC,SAAP,CAAiBC,IAAjB,CAAsBb,MAAtB,EAA6BC,OAA7B,CAAlB;;AAEAS,wCAAYI,eAAZ,GAA8B,UAACC,KAAD,EAAS;AACnCV,kDAAkBW,YAAlB,CAA+BD,MAAME,MAAN,CAAaC,MAA5C;AACH,6BAFD;;AAIAR,wCAAYS,SAAZ,GAAwB,UAACJ,KAAD,EAAS;;AAE7B,oCAAG,CAACZ,UAAJ,EAAe;AACXA,iDAAaY,MAAME,MAAN,CAAaC,MAA1B;AACAd,4CAAQD,WAAWC,KAAX,CAAiBgB,IAAjB,CAAsBjB,UAAtB,CAAR;AACAA,+CAAWC,KAAX,GAAmB,YAAI;AACnB,8CAAM,IAAIE,KAAJ,CAAU,gDAAV,CAAN;AACH,qCAFD;AAGH;AACDE,wCAAQL,UAAR;AACH,6BAVD;;AAYAO,wCAAYW,OAAZ,GAAsB,UAACN,KAAD,EAAS;AAC3BO,wCAAQC,GAAR,CAAYR,MAAME,MAAN,CAAaO,KAAzB;AACAf,uCAAOM,MAAME,MAAN,CAAaO,KAAb,CAAmBC,IAA1B;AACH,6BAHD;AAIH,yBAxBM,CAAP;AAyBH;;;sDAEuB;AACpB,4BAAGtB,UAAH,EAAc;AACVC;AACAD,yCAAa,IAAb;AACH;AACJ;;;iDAEmBuB,I,EAAK;AACrB1B,+BAAO2B,OAAP,CAAe,UAACC,KAAD,EAAS;AACpB,gCAAGF,KAAKG,gBAAL,CAAsBC,QAAtB,CAA+BF,KAA/B,CAAH,EACIF,KAAKK,iBAAL,CAAuBH,KAAvB;AACJF,iCAAKM,iBAAL,CAAuBJ,KAAvB,EAA6B,EAACK,eAAc,IAAf,EAA7B;AACH,yBAJD;AAKH","file":"ConnectionFactory.js","sourcesContent":["\r\n\r\nconst stores = ['negociacoes'];\r\nconst version = 3;\r\nconst dbName = 'aluraframe';\r\n\r\nlet connection = null;\r\nlet close = null;\r\n\r\nexport class ConnectionFactory{\r\n\r\n    constructor(){\r\n        throw new Error('Não é possível criar instâncias dessa classe.');\r\n    }\r\n\r\n    static getConnection(){\r\n\r\n        return new Promise((resolve, reject)=>{\r\n\r\n            let openRequest = window.indexedDB.open(stores,version);\r\n\r\n            openRequest.onupgradeneeded = (event)=>{\r\n                ConnectionFactory._createStore(event.target.result);\r\n            };\r\n\r\n            openRequest.onsuccess = (event)=>{\r\n\r\n                if(!connection){\r\n                    connection = event.target.result;\r\n                    close = connection.close.bind(connection);\r\n                    connection.close = ()=>{\r\n                        throw new Error('Essa conexão não pode ser fechada diretamente.');\r\n                    }\r\n                }\r\n                resolve(connection);\r\n            };\r\n\r\n            openRequest.onerror = (event)=>{\r\n                console.log(event.target.error);\r\n                reject(event.target.error.name);\r\n            };\r\n        });\r\n    }\r\n\r\n    static closeConnection(){\r\n        if(connection){\r\n            close();\r\n            connection = null;\r\n        }\r\n    }\r\n\r\n    static _createStore(conn){\r\n        stores.forEach((store)=>{\r\n            if(conn.objectStoreNames.contains(store))\r\n                conn.deleteObjectStore(store);\r\n            conn.createObjectStore(store,{autoIncrement:true})\r\n        });\r\n    }\r\n}"]}